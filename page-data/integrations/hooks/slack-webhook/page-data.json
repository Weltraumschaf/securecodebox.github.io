{"componentChunkName":"component---src-templates-integration-js","path":"/integrations/hooks/slack-webhook","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Slack WebHook"},"html":"<!-- end -->\n<h2 id=\"deployment\" style=\"position:relative;\"><a href=\"#deployment\" aria-label=\"deployment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment</h2>\n<p>Installing the Slack WebHook hook will add a ReadOnly Hook to your namespace. </p>\n<blockquote>\n<p>🔧 The implementation is currently work-in-progress and still undergoing major changes. It'll be released here once it has stabilized.</p>\n</blockquote>"},"scanner":{"edges":[{"node":{"html":"<p><img src=\"https://owasp.org/assets/images/logo.png\" alt=\"owasp logo\"></p>\n<p>The OWASP Amass Project has developed a tool to help information security professionals perform network mapping of attack surfaces and perform external asset discovery using open source information gathering and active reconnaissance techniques. To learn more about the Amass scanner itself visit <a href=\"https://owasp.org/www-project-amass/\">OWASP<em>Amass</em>Project</a> or <a href=\"https://github.com/OWASP/Amass\">Amass GitHub</a>.</p>\n<!-- end -->\n<h2 id=\"deployment\" style=\"position:relative;\"><a href=\"#deployment\" aria-label=\"deployment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment</h2>\n<p>The AMASS scanType can be deployed via helm:</p>\n<deckgo-highlight-code language=\"bash\"  terminal=\"carbon\" theme=\"cobalt\" >\n          <code slot=\"code\">helm upgrade --install amass ./scanners/amass/</code>\n        </deckgo-highlight-code>\n<h2 id=\"configuration\" style=\"position:relative;\"><a href=\"#configuration\" aria-label=\"configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuration</h2>\n<p>The following security scan configuration example are based on the <a href=\"https://github.com/OWASP/Amass/blob/master/doc/user_guide.md\">Amass User Guide</a>, please take a look at the original documentation for more configuration examples.</p>\n<ul>\n<li>The most basic use of the tool for subdomain enumeration: <code>amass enum -d example.com</code></li>\n<li>Typical parameters for DNS enumeration: <code>amass enum -v -src -ip -brute -min-for-recursive 2 -d example.com</code></li>\n</ul>\n<p>Special command line options:</p>\n<ul>\n<li>Disable generation of altered names <code>amass enum -noalts -d example.com</code></li>\n<li>Turn off recursive brute forcing <code>amass enum -brute -norecursive -d example.com</code></li>\n<li>Disable saving data into a local database <code>amass enum -nolocaldb -d example.com</code></li>\n<li>Domain names separated by commas (can be used multiple times) <code>amass enum -d example.com</code></li>\n</ul>","frontmatter":{"title":"Amass","path":"scanners/amass","category":"scanner","usecase":"Subdomain Enumeration Scanner","type":"Network","state":"released","appVersion":"3.10.3"}}},{"node":{"html":"<p>Ncrack is a high-speed network authentication cracking tool. It was built to help companies secure their networks by proactively testing all their hosts and networking devices for poor passwords. Security professionals also rely on Ncrack when auditing their clients. Ncrack was designed using a modular approach, a command-line syntax similar to Nmap and a dynamic engine that can adapt its behaviour based on network feedback. It allows for rapid, yet reliable large-scale auditing of multiple hosts.</p>\n<p>To learn more about the Ncrack scanner itself visit <a href=\"https://github.com/nmap/ncrack\">Ncrack GitHub</a> or <a href=\"https://nmap.org/ncrack/\">Ncrack Website</a>.</p>\n<!-- end -->\n<blockquote>\n<p>🔧 The implementation is currently work-in-progress and still undergoing major changes. It'll be released here once it has stabilized.</p>\n</blockquote>","frontmatter":{"title":"Ncrack","path":"scanners/Ncrack","category":"scanner","usecase":"Network authentication bruteforcing","type":"Authentication","state":"developing","appVersion":"0.7"}}},{"node":{"html":"<p><img src=\"https://cirt.net/files/alienlogo_3.gif\" alt=\"nikto logo\"></p>\n<p>Nikto is a free software command-line vulnerability scanner that scans webservers for dangerous files/CGIs, outdated server software and other problems. It performs generic and server type specific checks. It also captures and prints any cookies received. To learn more about the Nikto scanner itself visit <a href=\"https://cirt.net/\">cirt.net</a> or <a href=\"https://github.com/sullo/nikto\">Nikto GitHub</a>.</p>\n<!-- end -->\n<h2 id=\"deployment\" style=\"position:relative;\"><a href=\"#deployment\" aria-label=\"deployment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment</h2>\n<p>The Nikto ScanType can be deployed via helm:</p>\n<deckgo-highlight-code language=\"bash\"  terminal=\"carbon\" theme=\"cobalt\" >\n          <code slot=\"code\">helm upgrade --install nikto ./scanners/nikto/</code>\n        </deckgo-highlight-code>\n<h2 id=\"configuration\" style=\"position:relative;\"><a href=\"#configuration\" aria-label=\"configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuration</h2>\n<p>The following security scan configuration example are based on the <a href=\"https://cirt.net/nikto2-docs/usage.html#id2780332\">Nikto Documentation</a>, please take a look at the original documentation for more configuration examples.</p>\n<ul>\n<li>The most basic Nikto scan requires simply a host to target, since port 80 is assumed if none is specified. The host can either be an IP or a hostname of a machine, and is specified using the -h (-host) option. This will scan the IP 192.168.0.1 on TCP port 80: <code>-h 192.168.0.1</code></li>\n<li>To check on a different port, specify the port number with the -p (-port) option. This will scan the IP 192.168.0.1 on TCP port 443: <code>-h 192.168.0.1 -p 443</code></li>\n<li>Hosts, ports and protocols may also be specified by using a full URL syntax, and it will be scanned: <code>-h https://192.168.0.1:443/</code></li>\n<li>Nikto can scan multiple ports in the same scanning session. To test more than one port on the same host, specify the list of ports in the -p (-port) option. Ports can be specified as a range (i.e., 80-90), or as a comma-delimited list, (i.e., 80,88,90). This will scan the host on ports 80, 88 and 443: <code>-h 192.168.0.1 -p 80,88,443</code></li>\n</ul>\n<p>Nikto also has a comprehensive list of <a href=\"https://cirt.net/nikto2-docs/options.html\">command line options documented</a> which maybe useful to use.</p>\n<ul>\n<li>\n<p>Scan tuning can be used to decrease the number of tests performed against a target. By specifying the type of test to include or exclude, faster, focused testing can be completed. This is useful in situations where the presence of certain file types are undesired -- such as XSS or simply \"interesting\" files. Test types can be controlled at an individual level by specifying their identifier to the -T (-Tuning) option. In the default mode, if -T is invoked only the test type(s) specified will be executed. For example, only the tests for \"Remote file retrieval\" and \"Command execution\" can performed against the target: <code>192.168.0.1 -T 58</code></p>\n<ul>\n<li>0 - File Upload. Exploits which allow a file to be uploaded to the target server.</li>\n<li>1 - Interesting File / Seen in logs. An unknown but suspicious file or attack that has been seen in web server logs (note: if you have information regarding any of these attacks, please contact CIRT, Inc.).</li>\n<li>2 - Misconfiguration / Default File. Default files or files which have been misconfigured in some manner. This could be documentation, or a resource which should be password protected.</li>\n<li>3 - Information Disclosure. A resource which reveals information about the target. This could be a file system path or account name.</li>\n<li>4 - Injection (XSS/Script/HTML). Any manner of injection, including cross site scripting (XSS) or content (HTML). This does not include command injection.</li>\n<li>5 - Remote File Retrieval - Inside Web Root. Resource allows remote users to retrieve unauthorized files from within the web server's root directory.</li>\n<li>6 - Denial of Service. Resource allows a denial of service against the target application, web server or host (note: no intentional DoS attacks are attempted).</li>\n<li>7 - Remote File Retrieval - Server Wide. Resource allows remote users to retrieve unauthorized files from anywhere on the target.</li>\n<li>8 - Command Execution / Remote Shell. Resource allows the user to execute a system command or spawn a remote shell.</li>\n<li>9 - SQL Injection. Any type of attack which allows SQL to be executed against a database.</li>\n<li>a - Authentication Bypass. Allows client to access a resource it should not be allowed to access.</li>\n<li>b - Software Identification. Installed software or program could be positively identified.</li>\n<li>c - Remote source inclusion. Software allows remote inclusion of source code.</li>\n<li>x - Reverse Tuning Options. Perform exclusion of the specified tuning type instead of inclusion of the specified tuning type</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"Nikto","path":"scanners/nikto","category":"scanner","usecase":"Webserver Vulnerability Scanner","type":"Webserver","state":"released","appVersion":"2.1.6"}}},{"node":{"html":"<p><img src=\"https://nmap.org/images/sitelogo.png\" alt=\"Nmap logo\"></p>\n<p>Nmap (\"Network Mapper\") is a free and open source (license) utility for network discovery and security auditing. Many systems and network administrators also find it useful for tasks such as network inventory, managing service upgrade schedules, and monitoring host or service uptime.</p>\n<p>To learn more about the Nmap scanner itself visit [nmap.org].</p>\n<!-- end -->\n<h2 id=\"deployment\" style=\"position:relative;\"><a href=\"#deployment\" aria-label=\"deployment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment</h2>\n<p>The Nikto ScanType can be deployed via helm:</p>\n<deckgo-highlight-code language=\"bash\"  terminal=\"carbon\" theme=\"cobalt\" >\n          <code slot=\"code\">helm upgrade --install nmap ./scanners/nmap/</code>\n        </deckgo-highlight-code>\n<h2 id=\"nmap-configuration\" style=\"position:relative;\"><a href=\"#nmap-configuration\" aria-label=\"nmap configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Nmap Configuration</h2>\n<p>The nmap scan target is set via the targets location of the securityTest. The target should be a Hostname or an IP Address.</p>\n<p>Additional nmap scan features can be configured via the parameter attribute. For a detailed explanation to which parameters are available refer to the <a href=\"https://nmap.org/book/man.html\">Nmap Reference Guide</a>. All parameters are supported, but be careful with parameters that require root level rights, as these require additional configuration on the ScanType to be supported.</p>\n<p>Some useful example parameters listed below:</p>\n<ul>\n<li><code>-p</code> xx: Scan ports of the target. Replace xx with a single port number or\na range of ports.</li>\n<li><code>-PS</code>, <code>-PA</code>, <code>-PU</code> xx: Replace xx with the ports to scan. TCP SYN/ACK or\nUDP discovery.</li>\n<li><code>-sV</code>: Determine service and version info.</li>\n<li><code>-O</code>: Determine OS info. <strong>Note:</strong> This requires the the user to be run as root or the system capabilities to be extended to allow nmap to send raw sockets. See more information on <a href=\"https://github.com/secureCodeBox/scanner-infrastructure-nmap/pull/20\">how to deploy the secureCodeBox nmap container to allow this</a> and the <a href=\"https://secwiki.org/w/Running_nmap_as_an_unprivileged_user\">nmap docs about priviliged scans</a></li>\n<li><code>-A</code>: Determine service/version and OS info.</li>\n<li><code>-script</code> xx: Replace xx with the script name. Start the scan with the given script.</li>\n<li><code>--script</code> xx: Replace xx with a coma-separated list of scripts. Start the scan with the given scripts.</li>\n</ul>","frontmatter":{"title":"Nmap","path":"scanners/nmap","category":"scanner","usecase":"Network discovery and security auditing","type":"Network","state":"released","appVersion":"7.80"}}},{"node":{"html":"<p>SSH_scan is an easy-to-use prototype SSH configuration and policy scanner, inspired by Mozilla OpenSSH Security Guide, which provides a reasonable baseline policy recommendation for SSH configuration parameters such as Ciphers, MACs, and KexAlgos and much more.</p>\n<p>To learn more about the ssh<em>scan scanner itself visit [ssh</em>scan GitHub].</p>\n<!-- end -->\n<h2 id=\"deployment\" style=\"position:relative;\"><a href=\"#deployment\" aria-label=\"deployment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment</h2>\n<p>The SSH_scan ScanType can be deployed via helm.</p>\n<deckgo-highlight-code language=\"bash\"  terminal=\"carbon\" theme=\"cobalt\" >\n          <code slot=\"code\">helm upgrade --install ssh ./scanners/ssh_scan/</code>\n        </deckgo-highlight-code>\n<h2 id=\"configuration\" style=\"position:relative;\"><a href=\"#configuration\" aria-label=\"configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuration</h2>\n<p>The following security scan configuration example are based on the <a href=\"https://github.com/mozilla/ssh_scan#example-command-line-usage\">ssh_scan Documentation</a>, please take a look at the original documentation for more configuration examples.</p>\n<deckgo-highlight-code language=\"bash\"  terminal=\"carbon\" theme=\"cobalt\" >\n          <code slot=\"code\">ssh_scan v0.0.21 (https://github.com/mozilla/ssh_scan)\n\nUsage: ssh_scan [options]\n    -t, --target [IP/Range/Hostname] IP/Ranges/Hostname to scan\n    -f, --file [FilePath]            File Path of the file containing IP/Range/Hostnames to scan\n    -T, --timeout [seconds]          Timeout per connect after which ssh_scan gives up on the host\n    -L, --logger [Log File Path]     Enable logger\n    -O, --from_json [FilePath]       File to read JSON output from\n    -o, --output [FilePath]          File to write JSON output to\n    -p, --port [PORT]                Port (Default: 22)\n    -P, --policy [FILE]              Custom policy file (Default: Mozilla Modern)\n        --threads [NUMBER]           Number of worker threads (Default: 5)\n        --fingerprint-db [FILE]      File location of fingerprint database (Default: ./fingerprints.db)\n        --suppress-update-status     Do not check for updates\n    -u, --unit-test [FILE]           Throw appropriate exit codes based on compliance status\n    -V [STD_LOGGING_LEVEL],\n        --verbosity\n    -v, --version                    Display just version info\n    -h, --help                       Show this message\n\nExamples:\n\n  ssh_scan -t 192.168.1.1\n  ssh_scan -t server.example.com\n  ssh_scan -t ::1\n  ssh_scan -t ::1 -T 5\n  ssh_scan -f hosts.txt\n  ssh_scan -o output.json\n  ssh_scan -O output.json -o rescan_output.json\n  ssh_scan -t 192.168.1.1 -p 22222\n  ssh_scan -t 192.168.1.1 -p 22222 -L output.log -V INFO\n  ssh_scan -t 192.168.1.1 -P custom_policy.yml\n  ssh_scan -t 192.168.1.1 --unit-test -P custom_policy.yml</code>\n        </deckgo-highlight-code>","frontmatter":{"title":"SSH","path":"scanners/ssh_scan","category":"scanner","usecase":"SSH Configuration and Policy Scanner","type":"SSH","state":"released","appVersion":"0.0.43"}}},{"node":{"html":"<p>SSLyze is a Python library and a CLI tool that can analyze the SSL configuration of a server by connecting to it. It is designed to be fast and comprehensive, and should help organizations and testers identify mis-configurations affecting their SSL/TLS servers. To learn more about the SSLyze scanner itself visit or <a href=\"https://github.com/nabla-c0d3/sslyze\">SSLyze GitHub</a>.</p>\n<!-- end -->\n<h2 id=\"deployment\" style=\"position:relative;\"><a href=\"#deployment\" aria-label=\"deployment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment</h2>\n<p>The SSLyze scanType can be deployed via helm:</p>\n<deckgo-highlight-code language=\"bash\"  terminal=\"carbon\" theme=\"cobalt\" >\n          <code slot=\"code\">helm upgrade --install sslyze ./scanners/sslyze/</code>\n        </deckgo-highlight-code>\n<h2 id=\"configuration\" style=\"position:relative;\"><a href=\"#configuration\" aria-label=\"configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuration</h2>\n<p>The following security scan configuration example are based on the <a href=\"https://nabla-c0d3.github.io/sslyze/documentation/\">SSLyze Documentation</a>, please take a look at the original documentation for more configuration examples.</p>\n<p>The command line interface can be used to easily run server scans: <code>sslyze --regular www.example.com</code></p>\n<deckgo-highlight-code language=\"bash\"  terminal=\"carbon\" theme=\"cobalt\" >\n          <code slot=\"code\">Usage: sslyze [options] target1.com target2.com:443 target3.com:443{ip} etc...\n\nOptions:\n  --version             show program&#39;s version number and exit\n  -h, --help            show this help message and exit\n  --regular             Regular HTTPS scan; shortcut for --sslv2 --sslv3\n                        --tlsv1 --tlsv1_1 --tlsv1_2 --tlsv1_3 --reneg --resum\n                        --certinfo --hide_rejected_ciphers --compression\n                        --heartbleed --openssl_ccs --fallback --robot\n\n  Trust stores options:\n    --update_trust_stores\n                        Update the default trust stores used by SSLyze. The\n                        latest stores will be downloaded from https://github.c\n                        om/nabla-c0d3/trust_stores_observatory. This option is\n                        meant to be used separately, and will silence any\n                        other command line option supplied to SSLyze.\n\n  Client certificate options:\n    --cert=CERT         Client certificate chain filename. The certificates\n                        must be in PEM format and must be sorted starting with\n                        the subject&#39;s client certificate, followed by\n                        intermediate CA certificates if applicable.\n    --key=KEY           Client private key filename.\n    --keyform=KEYFORM   Client private key format. DER or PEM (default).\n    --pass=KEYPASS      Client private key passphrase.\n\n  Input and output options:\n    --json_out=JSON_FILE\n                        Write the scan results as a JSON document to the file\n                        JSON_FILE. If JSON_FILE is set to &quot;-&quot;, the JSON output\n                        will instead be printed to stdout. The resulting JSON\n                        file is a serialized version of the ScanResult objects\n                        described in SSLyze&#39;s Python API: the nodes and\n                        attributes will be the same. See https://nabla-c0d3.gi\n                        thub.io/sslyze/documentation/available-scan-\n                        commands.html for more details.\n    --targets_in=TARGETS_IN\n                        Read the list of targets to scan from the file\n                        TARGETS_IN. It should contain one host:port per line.\n    --quiet             Do not output anything to stdout; useful when using\n                        --json_out.\n\n  Connectivity options:\n    --slow_connection   Greatly reduce the number of concurrent connections\n                        initiated by SSLyze. This will make the scans slower\n                        but more reliable if the connection between your host\n                        and the server is slow, or if the server cannot handle\n                        many concurrent connections. Enable this option if you\n                        are getting a lot of timeouts or errors.\n    --https_tunnel=HTTPS_TUNNEL\n                        Tunnel all traffic to the target server(s) through an\n                        HTTP CONNECT proxy. HTTP_TUNNEL should be the proxy&#39;s\n                        URL: &#39;http://USER:PW@HOST:PORT/&#39;. For proxies\n                        requiring authentication, only Basic Authentication is\n                        supported.\n    --starttls=STARTTLS\n                        Perform a StartTLS handshake when connecting to the\n                        target server(s). StartTLS should be one of: auto,\n                        smtp, xmpp, xmpp_server, pop3, imap, ftp, ldap, rdp,\n                        postgres. The &#39;auto&#39; option will cause SSLyze to\n                        deduce the protocol (ftp, imap, etc.) from the\n                        supplied port number, for each target servers.\n    --xmpp_to=XMPP_TO   Optional setting for STARTTLS XMPP. XMPP_TO should be\n                        the hostname to be put in the &#39;to&#39; attribute of the\n                        XMPP stream. Default is the server&#39;s hostname.\n    --sni=SNI           Use Server Name Indication to specify the hostname to\n                        connect to.  Will only affect TLS 1.0+ connections.\n\n  Scan commands:\n    --tlsv1_1           Test a server for TLS 1.1 support.\n    --tlsv1_2           Test a server for TLS 1.2 support.\n    --robot             Test a server for the ROBOT vulnerability.\n    --reneg             Test a server for for insecure TLS renegotiation and\n                        client-initiated renegotiation.\n    --early_data        Test a server for TLS 1.3 early data support.\n    --fallback          Test a server for the TLS_FALLBACK_SCSV mechanism to\n                        prevent downgrade attacks.\n    --tlsv1_3           Test a server for TLS 1.3 support.\n    --certinfo          Retrieve and analyze a server&#39;s certificate(s) to\n                        verify its validity.\n    --certinfo_ca_file=CERTINFO_CA_FILE\n                        Path to a file containing root certificates in PEM\n                        format that will be used to verify the validity of the\n                        server&#39;s certificate.\n    --heartbleed        Test a server for the OpenSSL Heartbleed\n                        vulnerability.\n    --resum_rate        Measure a server&#39;s session resumption rate when\n                        attempting 100 resumptions using session IDs.\n    --resum             Test a server for session resumption support using\n                        session IDs and TLS tickets.\n    --http_headers      Test a server for the presence of security-related\n                        HTTP headers.\n    --sslv2             Test a server for SSL 2.0 support.\n    --tlsv1             Test a server for TLS 1.0 support.\n    --sslv3             Test a server for SSL 3.0 support.\n    --compression       Test a server for TLS compression support, which can\n                        be leveraged to perform a CRIME attack.\n    --openssl_ccs       Test a server for the OpenSSL CCS Injection\n                        vulnerability (CVE-2014-0224).</code>\n        </deckgo-highlight-code>","frontmatter":{"title":"SSLyze","path":"scanners/sslyze","category":"scanner","usecase":"SSL/TLS Configuration Scanner","type":"SSL","state":"released","appVersion":"3.0.8"}}},{"node":{"html":"<p><code>Trivy</code> (<code>tri</code> pronounced like <strong>tri</strong>gger, <code>vy</code> pronounced like en<strong>vy</strong>) is a simple and comprehensive vulnerability scanner for containers and other artifacts.\nA software vulnerability is a glitch, flaw, or weakness present in the software or in an Operating System.\n<code>Trivy</code> detects vulnerabilities of OS packages (Alpine, RHEL, CentOS, etc.) and application dependencies (Bundler, Composer, npm, yarn, etc.).\n<code>Trivy</code> is easy to use. Just install the binary and you're ready to scan. All you need to do for scanning is to specify a target such as an image name of the container.</p>\n<p>To learn more about the Trivy scanner itself visit or <a href=\"https://github.com/aquasecurity/trivy\">Trivy GitHub</a>.</p>\n<!-- end -->\n<h2 id=\"deployment\" style=\"position:relative;\"><a href=\"#deployment\" aria-label=\"deployment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment</h2>\n<p>The Trivy scanType can be deployed via helm:</p>\n<deckgo-highlight-code language=\"bash\"  terminal=\"carbon\" theme=\"cobalt\" >\n          <code slot=\"code\">helm upgrade --install trivy ./scanners/trivy/</code>\n        </deckgo-highlight-code>\n<h2 id=\"configuration\" style=\"position:relative;\"><a href=\"#configuration\" aria-label=\"configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuration</h2>\n<p>The following security scan configuration example are based on the <a href=\"https://github.com/aquasecurity/trivy#examples\">Trivy Documentation</a>, please take a look at the original documentation for more configuration examples.</p>\n<ul>\n<li>Filter the vulnerabilities by severities <code>trivy image --severity HIGH,CRITICAL ruby:2.4.0</code></li>\n<li>Filter the vulnerabilities by type (<code>os</code> or <code>library</code>) <code>trivy image --vuln-type os ruby:2.4.0</code></li>\n<li>Skip update of vulnerability DB: <code>trivy image --skip-update python:3.4-alpine3.9</code></li>\n<li>Ignore unfixed vulnerabilities:<code>trivy image --ignore-unfixed ruby:2.4.0</code> By default, Trivy also detects unpatched/unfixed vulnerabilities. This means you can't fix these vulnerabilities even if you update all packages. If you would like to ignore them, use the <code>--ignore-unfixed</code> option.</li>\n</ul>","frontmatter":{"title":"Trivy","path":"scanners/trivy","category":"scanner","usecase":"Container Vulnerability Scanner","type":"Container","state":"released","appVersion":"0.10.1"}}},{"node":{"html":"<p><img src=\"https://raw.githubusercontent.com/wpscanteam/wpscan/gh-pages/images/wpscan_logo.png\" alt=\"WPScan Logo\"></p>\n<p>WPScan is a free, for non-commercial use, black box WordPress vulnerability scanner written for security professionals and blog maintainers to test the security of their sites.</p>\n<blockquote>\n<p>NOTE: You need to provide WPSan with an API Token so that it can look up vulnerabilities infos with <a href=\"https://wpvulndb.com\">https://wpvulndb.com</a>. Without the token WPScan will only identify Wordpress Core / Plugin / Theme versions but not if they are actually vulnerable. You can get a free API Token at by registering for an account at <a href=\"https://wpvulndb.com\">https://wpvulndb.com</a>. Using the secureCodeBox WPScans you can specify the token via the <code>WPVULNDB_API_TOKEN</code> target attribute, see the example below.</p>\n</blockquote>\n<p>To learn more about the WPScan scanner itself visit <a href=\"https://wpscan.org/\">wpscan.org</a> or <a href=\"https://wpscan.io/\">wpscan.io</a>.</p>\n<!-- end -->\n<h2 id=\"deployment\" style=\"position:relative;\"><a href=\"#deployment\" aria-label=\"deployment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment</h2>\n<p>The WPScan scanType can be deployed via helm:</p>\n<deckgo-highlight-code language=\"bash\"  terminal=\"carbon\" theme=\"cobalt\" >\n          <code slot=\"code\">helm upgrade --install wpscan ./scanners/wpscan/</code>\n        </deckgo-highlight-code>\n<h2 id=\"configuration\" style=\"position:relative;\"><a href=\"#configuration\" aria-label=\"configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuration</h2>\n<p>The following security scan configuration example are based on the <a href=\"https://github.com/wpscanteam/wpscan/wiki/WPScan-User-Documentation\">WPScan Documentation</a>, please take a look at the original documentation for more configuration examples.</p>\n<ul>\n<li>Scan all plugins with known vulnerabilities: <code>wpscan --url example.com -e vp --plugins-detection mixed --api-token WPVULNDB_API_TOKEN</code></li>\n<li>Scan all plugins in our database (could take a very long time): <code>wpscan --url example.com -e ap --plugins-detection mixed --api-token WPVULNDB_API_TOKEN</code></li>\n<li>Password brute force attack: <code>wpscan --url example.com -e u --passwords /path/to/password_file.txt</code></li>\n<li>WPScan keeps a local database of metadata that is used to output useful information, such as the latest version of a plugin. The local database can be updated with the following command: <code>wpscan --update</code></li>\n<li>\n<p>When enumerating the WordPress version, installed plugins or installed themes, you can use three different \"modes\", which are:</p>\n<ul>\n<li>passive</li>\n<li>aggressive</li>\n<li>mixed\nIf you want the most results use the \"mixed\" mode. However, if you are worried that the server may not be able to handle a large number of requests, use the \"passive\" mode. The default mode is \"mixed\", with the exception of plugin enumeration, which is \"passive\". You will need to manually override the plugin detection mode, if you want to use anything other than the default, with the <code>--plugins-detection</code> option.</li>\n</ul>\n</li>\n<li>WPScan can enumerate various things from a remote WordPress application, such as plugins, themes, usernames, backed up files wp-config.php files, Timthumb files, database exports and more. To use WPScan's enumeration capabilities supply the <code>-e</code>option.</li>\n</ul>\n<deckgo-highlight-code language=\"bash\"  terminal=\"carbon\" theme=\"cobalt\" >\n          <code slot=\"code\">Available Choices:\n  vp  |  Vulnerable plugins\n  ap  |  All plugins\n  p   |  Plugins\n  vt  |  Vulnerable themes\n  at  |  All themes\n  t   |  Themes\n  tt  |  Timthumbs\n  cb  |  Config backups\n  dbe |  Db exports\n  u   |  User IDs range. e.g: u1-5\n         Range separator to use: &#39;-&#39;\n         Value if no argument supplied: 1-10\n  m   |  Media IDs range. e.g m1-15\n         Note: Permalink setting must be set to &quot;Plain&quot; for those to be detected\n         Range separator to use: &#39;-&#39;\n         Value if no argument supplied: 1-100\n\nSeparator to use between the values: &#39;,&#39;\nDefault: All Plugins, Config Backups\nValue if no argument supplied: vp,vt,tt,cb,dbe,u,m\nIncompatible choices (only one of each group/s can be used):\n  - vp, ap, p\n  - vt, at, t</code>\n        </deckgo-highlight-code>","frontmatter":{"title":"WPScan","path":"scanners/wpscan","category":"scanner","usecase":"Wordpress Vulnerability Scanner","type":"CMS","state":"released","appVersion":"3.8.5"}}},{"node":{"html":"<p><img src=\"https://raw.githubusercontent.com/wiki/zaproxy/zaproxy/images/zap32x32.png\" alt=\"zap logo\"></p>\n<p>The OWASP Zed Attack Proxy (ZAP) is one of the world’s most popular free security tools and is actively maintained by hundreds of international volunteers*. It can help you automatically find security vulnerabilities in your web applications while you are developing and testing your applications. Its also a great tool for experienced pentesters to use for manual security testing.</p>\n<p>To learn more about the ZAP scanner itself visit <a href=\"https://www.zaproxy.org/\">https://www.zaproxy.org/</a>.</p>\n<!-- end -->\n<h2 id=\"deployment\" style=\"position:relative;\"><a href=\"#deployment\" aria-label=\"deployment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment</h2>\n<p>The ZAP scanType can be deployed via helm:</p>\n<deckgo-highlight-code language=\"bash\"  terminal=\"carbon\" theme=\"cobalt\" >\n          <code slot=\"code\">helm upgrade --install zap ./scanners/zap/</code>\n        </deckgo-highlight-code>\n<h2 id=\"configuration\" style=\"position:relative;\"><a href=\"#configuration\" aria-label=\"configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuration</h2>\n<p>The following security scan configuration example are based on the ZAP Docker Scan Scripts. By default the secureCodeBox ZAP Helm Chart installs all three ZAP scripts: <code>zap-baseline</code>, <code>zap-full-scan</code> &#x26; <code>zap-api-scan</code>. Listed below are the arguments supported by the <code>zap-baseline</code> script, which are mostly interchangable with the other ZAP scripts. For a more complete reference check out the <a href=\"https://www.zaproxy.org/docs/docker/\">ZAP Documentation</a> and the secureCodeBox based ZAP examples listed below.</p>\n<p>The command line interface can be used to easily run server scans: <code>-t www.example.com</code></p>\n<deckgo-highlight-code language=\"bash\"  terminal=\"carbon\" theme=\"cobalt\" >\n          <code slot=\"code\">Usage: zap-baseline.py -t &lt;target&gt; [options]\n    -t target         target URL including the protocol, eg https://www.example.com\nOptions:\n    -h                print this help message\n    -c config_file    config file to use to INFO, IGNORE or FAIL warnings\n    -u config_url     URL of config file to use to INFO, IGNORE or FAIL warnings\n    -g gen_file       generate default config file (all rules set to WARN)\n    -m mins           the number of minutes to spider for (default 1)\n    -r report_html    file to write the full ZAP HTML report\n    -w report_md      file to write the full ZAP Wiki (Markdown) report\n    -x report_xml     file to write the full ZAP XML report\n    -J report_json    file to write the full ZAP JSON document\n    -a                include the alpha passive scan rules as well\n    -d                show debug messages\n    -P                specify listen port\n    -D                delay in seconds to wait for passive scanning\n    -i                default rules not in the config file to INFO\n    -I                do not return failure on warning\n    -j                use the Ajax spider in addition to the traditional one\n    -l level          minimum level to show: PASS, IGNORE, INFO, WARN or FAIL, use with -s to hide example URLs\n    -n context_file   context file which will be loaded prior to spidering the target\n    -p progress_file  progress file which specifies issues that are being addressed\n    -s                short output format - dont show PASSes or example URLs\n    -T                max time in minutes to wait for ZAP to start and the passive scan to run\n    -z zap_options    ZAP command line options e.g. -z &quot;-config aaa=bbb -config ccc=ddd&quot;\n    --hook            path to python file that define your custom hooks</code>\n        </deckgo-highlight-code>","frontmatter":{"title":"ZAP","path":"scanners/zap","category":"scanner","usecase":"WebApp & OpenAPI Vulnerability Scanner","type":"WebApplication","state":"released","appVersion":"2.9.0"}}},{"node":{"html":"<p>kube-hunter hunts for security weaknesses in Kubernetes clusters. The tool was developed to increase awareness and visibility for security issues in Kubernetes environments. You should NOT run kube-hunter on a Kubernetes cluster that you don't own!</p>\n<p>To learn more about the kube-hunter scanner itself visit <a href=\"https://github.com/aquasecurity/kube-hunter\">kube-hunter GitHub</a> or <a href=\"https://kube-hunter.aquasec.com/\">kube-hunter Website</a>.</p>\n<!-- end -->\n<h2 id=\"deployment\" style=\"position:relative;\"><a href=\"#deployment\" aria-label=\"deployment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment</h2>\n<p>The kube-hunter ScanType can be deployed via helm:</p>\n<deckgo-highlight-code language=\"bash\"  terminal=\"carbon\" theme=\"cobalt\" >\n          <code slot=\"code\">helm upgrade --install kube-hunter ./scanners/kube-hunter/</code>\n        </deckgo-highlight-code>\n<h2 id=\"configuration\" style=\"position:relative;\"><a href=\"#configuration\" aria-label=\"configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuration</h2>\n<p>The following security scan configuration example are based on the <a href=\"https://github.com/aquasecurity/kube-hunter#scanning-options\">kube-hunter Documentation</a>, please take a look at the original documentation for more configuration examples.</p>\n<ul>\n<li>To specify remote machines for hunting, select option 1 or use the --remote option. Example: <code>kube-hunter --remote some.node.com</code></li>\n<li>To specify interface scanning, you can use the --interface option (this will scan all of the machine's network interfaces). Example: <code>kube-hunter --interface</code></li>\n<li>To specify a specific CIDR to scan, use the --cidr option. Example: <code>kube-hunter --cidr 192.168.0.0/24</code></li>\n</ul>","frontmatter":{"title":"kube-hunter","path":"scanners/kube-hunter","category":"scanner","usecase":"Kubernetes Vulnerability Scanner","type":"Kubernetes","state":"released","appVersion":"0.3.1"}}},{"node":{"html":"<p>kubeaudit helps you audit your Kubernetes clusters against common security controls.</p>\n<p>To learn more about the kubeaudit scanner itself visit <a href=\"https://github.com/Shopify/kubeaudit\">kubeaudit GitHub</a>.</p>\n<!-- end -->\n<blockquote>\n<p>🔧 The secureCodeBox core team is working on an integration of kubeaudit. We will keep you informed.</p>\n</blockquote>","frontmatter":{"title":"kubeaudit","path":"scanners/kubeaudit","category":"scanner","usecase":"Audit your Kubernetes clusters","type":"Kubernetes","state":"roadmap","appVersion":"0.9.0"}}}]},"hook":{"edges":[{"node":{"html":"<!-- end -->\n<h2 id=\"deployment\" style=\"position:relative;\"><a href=\"#deployment\" aria-label=\"deployment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment</h2>\n<p>Installing the Cascading Scans hook will add a ReadOnly Hook to your namespace which looks for matching <em>CascadingRules</em> in the namespace and start the according scans. </p>\n<deckgo-highlight-code language=\"bash\"  terminal=\"carbon\" theme=\"cobalt\" >\n          <code slot=\"code\">helm upgrade --install dssh ./hooks/declarative-subsequent-scans/</code>\n        </deckgo-highlight-code>\n<h3 id=\"verification\" style=\"position:relative;\"><a href=\"#verification\" aria-label=\"verification permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Verification</h3>\n<deckgo-highlight-code language=\"bash\"  terminal=\"carbon\" theme=\"cobalt\" >\n          <code slot=\"code\">kubectl get ScanCompletionHooks\nNAME   TYPE       IMAGE\ndssh   ReadOnly   docker.io/scbexperimental/hook-declarative-subsequent-scans:latest</code>\n        </deckgo-highlight-code>\n<h2 id=\"cascadingscan-rules\" style=\"position:relative;\"><a href=\"#cascadingscan-rules\" aria-label=\"cascadingscan rules permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CascadingScan Rules</h2>\n<p>The CascadingRules are included directly in each helm chart of the individual scanners. </p>\n<deckgo-highlight-code language=\"bash\"  terminal=\"carbon\" theme=\"cobalt\" >\n          <code slot=\"code\"># Check your CascadingRules\nkubectl get CascadingRules\nNAME             STARTS         INVASIVENESS   INTENSIVENESS\nhttps-tls-scan   sslyze         non-invasive   light\nimaps-tls-scan   sslyze         non-invasive   light\nnikto-http       nikto          non-invasive   medium\nnmap-smb         nmap           non-invasive   light\npop3s-tls-scan   sslyze         non-invasive   light\nsmtps-tls-scan   sslyze         non-invasive   light\nssh-scan         ssh-scan       non-invasive   light\nzap-http         zap-baseline   non-invasive   medium</code>\n        </deckgo-highlight-code>\n<h2 id=\"starting-a-cascading-scan\" style=\"position:relative;\"><a href=\"#starting-a-cascading-scan\" aria-label=\"starting a cascading scan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Starting a cascading Scan</h2>\n<p>When you start a normal Scan, no CascadingRule will be applied. To use a <em>CascadingRule</em> the scan must be marked to allow cascading rules.\nThis is implemented using kubernetes label selectors, meaning that scans mark the classes of scans which are allowed to be cascaded by the current one.</p>\n<h3 id=\"example\" style=\"position:relative;\"><a href=\"#example\" aria-label=\"example permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example</h3>\n<deckgo-highlight-code language=\"yaml\"  terminal=\"carbon\" theme=\"cobalt\" >\n          <code slot=\"code\">cat &lt;&lt;EOF | kubectl apply -f -\napiVersion: &quot;execution.experimental.securecodebox.io/v1&quot;\nkind: Scan\nmetadata:\n  name: &quot;example.com&quot;\nspec:\n  scanType: nmap\n  parameters:\n    - -p22,80,443\n    - example.com\n  cascades:\n    matchLabels:\n      securecodebox.io/intensive: light\nEOF</code>\n        </deckgo-highlight-code>\n<p>This Scan will use all CascadingRules which are labeled with a \"light\" intensity.\nYou can lookup which CascadingRules this selects by running:</p>\n<deckgo-highlight-code language=\"bash\"  terminal=\"carbon\" theme=\"cobalt\" >\n          <code slot=\"code\">kubectl get CascadingRules -l &quot;securecodebox.io/intensive=light&quot;\nNAME             STARTS     INVASIVENESS   INTENSIVENESS\nhttps-tls-scan   sslyze     non-invasive   light\nimaps-tls-scan   sslyze     non-invasive   light\nnmap-smb         nmap       non-invasive   light\npop3s-tls-scan   sslyze     non-invasive   light\nsmtps-tls-scan   sslyze     non-invasive   light\nssh-scan         ssh-scan   non-invasive   light</code>\n        </deckgo-highlight-code>\n<p>The label selectors also allow the more powerful matchExpression selectors:</p>\n<deckgo-highlight-code language=\"yaml\"  terminal=\"carbon\" theme=\"cobalt\" >\n          <code slot=\"code\">cat &lt;&lt;EOF | kubectl apply -f -\napiVersion: &quot;execution.experimental.securecodebox.io/v1&quot;\nkind: Scan\nmetadata:\n  name: &quot;example.com&quot;\nspec:\n  scanType: nmap\n  parameters:\n    - -p22,80,443\n    - example.com\n  cascades:\n    # Using matchExpression instead of matchLabels\n    matchExpression:\n      key: &quot;securecodebox.io/intensive&quot;\n      operator: In\n      # This select both light and medium intensity rules\n      values: [light, medium]\nEOF</code>\n        </deckgo-highlight-code>\n<p>This selection can be replicated in kubectl using:</p>\n<deckgo-highlight-code language=\"bash\"  terminal=\"carbon\" theme=\"cobalt\" >\n          <code slot=\"code\">kubectl get CascadingRules -l &quot;securecodebox.io/intensive in (light,medium)&quot;\nNAME             STARTS         INVASIVENESS   INTENSIVENESS\nhttps-tls-scan   sslyze         non-invasive   light\nimaps-tls-scan   sslyze         non-invasive   light\nnikto-http       nikto          non-invasive   medium\nnmap-smb         nmap           non-invasive   light\npop3s-tls-scan   sslyze         non-invasive   light\nsmtps-tls-scan   sslyze         non-invasive   light\nssh-scan         ssh-scan       non-invasive   light\nzap-http         zap-baseline   non-invasive   medium</code>\n        </deckgo-highlight-code>","frontmatter":{"title":"Cascading Scans","path":"hooks/declarative-subsequent-scans","category":"hook","usecase":"Cascading Scans based declarative Rules.","type":"processing","state":"released"}}},{"node":{"html":"<!-- end -->\n<h2 id=\"deployment\" style=\"position:relative;\"><a href=\"#deployment\" aria-label=\"deployment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment</h2>\n<p>Installing the Generic WebHook hook will add a ReadOnly Hook to your namespace. </p>\n<deckgo-highlight-code language=\"bash\"  terminal=\"carbon\" theme=\"cobalt\" >\n          <code slot=\"code\">helm upgrade --install gwh ./hooks/generic-webhook/ --set webhookUrl=&quot;http://example.com/my/webhook/target&quot;</code>\n        </deckgo-highlight-code>\n<blockquote>\n<p>✍ This documentation is currently work-in-progress. </p>\n</blockquote>","frontmatter":{"title":"Generic WebHook","path":"hooks/generic-webhook","category":"hook","usecase":"Publishes Scan Findings as WebHook.","type":"integration","state":"released"}}},{"node":{"html":"<blockquote>\n<p>🔧 The implementation is currently work-in-progress and still undergoing major changes. It'll be released here once it has stabilized.</p>\n</blockquote>","frontmatter":{"title":"Imperative  Scans","path":"hooks/imperative-subsequent-scans","category":"hook","usecase":"Cascading Scans based imperative Rules.","type":"integration","state":"roadmap"}}},{"node":{"html":"<!-- end -->\n<h2 id=\"deployment\" style=\"position:relative;\"><a href=\"#deployment\" aria-label=\"deployment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment</h2>\n<p>Installing the Teams WebHook hook will add a ReadOnly Hook to your namespace. </p>\n<blockquote>\n<p>🔧 The implementation is currently work-in-progress and still undergoing major changes. It'll be released here once it has stabilized.</p>\n</blockquote>","frontmatter":{"title":"MS Teams WebHook","path":"hooks/teams-webhook","category":"hook","usecase":"Publishes Scan Summary to MS Teams.","type":"integration","state":"roadmap"}}},{"node":{"html":"<!-- end -->\n<h2 id=\"deployment\" style=\"position:relative;\"><a href=\"#deployment\" aria-label=\"deployment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment</h2>\n<p>Installing the Slack WebHook hook will add a ReadOnly Hook to your namespace. </p>\n<blockquote>\n<p>🔧 The implementation is currently work-in-progress and still undergoing major changes. It'll be released here once it has stabilized.</p>\n</blockquote>","frontmatter":{"title":"Slack WebHook","path":"hooks/slack-webhook","category":"hook","usecase":"Publishes Scan Summary to Slack.","type":"integration","state":"roadmap"}}},{"node":{"html":"<!-- end -->\n<h2 id=\"deployment\" style=\"position:relative;\"><a href=\"#deployment\" aria-label=\"deployment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment</h2>\n<p>Installing the <em>Update Field</em> hook will add a ReadOnly Hook to your namespace. </p>\n<deckgo-highlight-code language=\"bash\"  terminal=\"carbon\" theme=\"cobalt\" >\n          <code slot=\"code\">helm upgrade --install ufh ./hooks/update-field/ --set attribute.name=&quot;category&quot; --set attribute.value=&quot;my-own-category&quot;</code>\n        </deckgo-highlight-code>\n<blockquote>\n<p>✍ This documentation is currently work-in-progress. </p>\n</blockquote>","frontmatter":{"title":"Update Field","path":"hooks/update-field","category":"hook","usecase":"Updates fields in finding results.","type":"dataProcessing","state":"released"}}}]},"persistenceProvider":{"edges":[{"node":{"html":"<!-- end -->\n<h2 id=\"about\" style=\"position:relative;\"><a href=\"#about\" aria-label=\"about permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About</h2>\n<p>DefectDojo is an open-source tool for importing and managing findings of security scanners. The DefectDojo persistence provider can be used to create new Engagements for SecurityTests run via the secureCodeBox and import all findings which were identified automatically to DefectDojo.</p>\n<p>Tools which are supported both by the secureCodeBox and DefectDojo (OWASP ZAP &#x26; Nmap) this is done by importing the raw scan report into DefectDojo. Findings by other secureCodeBox supported scanners are currently not directly supported by DefectDojo. These findings are imported via a generic finding API of DefectDojo, which might cause some loss of information on the findings.  </p>\n<p>To learn more about DefectDojo visit <a href=\"https://github.com/DefectDojo/django-DefectDojo\">DefectDojo GitHub</a> or <a href=\"https://www.defectdojo.org/\">DefectDojo Website</a>.</p>\n<h2 id=\"deployment\" style=\"position:relative;\"><a href=\"#deployment\" aria-label=\"deployment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment</h2>\n<blockquote>\n<p>🔧 The implementation is currently work-in-progress and under still undergoing major changes. It'll be released here once it has stabilized.</p>\n</blockquote>","frontmatter":{"title":"DefectDojo","path":"hooks/persistence-defectdojo","category":"hook","usecase":"Publishes all Scan Findings to DefectDojo.","type":"persistenceProvider","state":"developing"}}},{"node":{"html":"<!-- end -->\n<h2 id=\"about\" style=\"position:relative;\"><a href=\"#about\" aria-label=\"about permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About</h2>\n<p>The ElasticSearch persistenceProvider hook saves all findings and reports into the configured ElasticSearch index. This allows for some easy searching and visualization of the findings. To learn more about Elasticsearch visit <a href=\"https://www.elastic.co/products/elasticsearch\">elastic.io</a>.</p>\n<h2 id=\"deployment\" style=\"position:relative;\"><a href=\"#deployment\" aria-label=\"deployment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment</h2>\n<p>Installing the Elasticsearch persistenceProvider hook will add a <em>ReadOnly Hook</em> to your namespace. </p>\n<deckgo-highlight-code language=\"bash\"  terminal=\"carbon\" theme=\"cobalt\" >\n          <code slot=\"code\">helm upgrade --install elkh ./hooks/persistence-elastic/</code>\n        </deckgo-highlight-code>\n<h2 id=\"configuration\" style=\"position:relative;\"><a href=\"#configuration\" aria-label=\"configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuration</h2>\n<p>see values.yaml</p>\n<deckgo-highlight-code language=\"yaml\"  terminal=\"carbon\" theme=\"cobalt\" >\n          <code slot=\"code\"># Define a specific index prefix\nindexPrefix: &quot;scbv2&quot;\n\n# Enable this when you already have an Elastic Stack running to which you want to send your results\nexternalElasticStack:\n  enabled: false\n  elasticsearchAddress: &quot;https://elasticsearch.example.com&quot;\n  kibanaAddress: &quot;https://kibana.example.com&quot;\n\n# Configure authentication schema and credentials the persistence provider should use to connect to elasticsearch\n# user and apikey are mutually exclusive, only set one!\nauthentication:\n  # Link a pre-existing generic secret with `username` and `password` key / value pairs\n  userSecret: null\n  # Link a pre-existing generic secret with `id` and `key` key / value pairs\n  apiKeySecret: null\n\n# Configures included Elasticsearch subchart\nelasticsearch:\n  enabled: true\n  replicas: 1\n  minimumMasterNodes: 1\n  # image: docker.elastic.co/elasticsearch/elasticsearch-oss\n\n# Configures included Elasticsearch subchart\nkibana:\n  enabled: true\n  # image: docker.elastic.co/kibana/kibana-oss</code>\n        </deckgo-highlight-code>","frontmatter":{"title":"Elasticsearch","path":"hooks/persistence-elastic","category":"hook","usecase":"Publishes all Scan Findings to Elasticsearch.","type":"persistenceProvider","state":"released"}}},{"node":{"html":"<!-- end -->\n<h2 id=\"deployment\" style=\"position:relative;\"><a href=\"#deployment\" aria-label=\"deployment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment</h2>\n<blockquote>\n<p>🔧 The implementation is currently work-in-progress and still undergoing major changes. It'll be released here once it has stabilized.</p>\n</blockquote>","frontmatter":{"title":"Static Report","path":"hooks/persistence-staticreport","category":"hook","usecase":"Publishes all Scan Findings as HTML Report.","type":"persistenceProvider","state":"developing"}}}]},"examples":{"edges":[],"nodes":[]},"exampleReadMes":{"edges":[]}},"pageContext":{"id":"1e73443f-ee8a-5402-849b-8bf7a92ba941","exampleFilter":"/slack-webhook/examples/"}}}